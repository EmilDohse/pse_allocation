// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package allocation;

import java.util.ServiceLoader;

import exception.AllocationException;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

/************************************************************/
/**
 * Abstrakter Löser des Einteilungsproblems.
 */
abstract class AbstractAllocator {

    /**
     * Startet die Berechnung einer Einteilung.
     * 
     * @param configuration
     *            Die Konfiguration, nach der die Einteilung berechnet werden
     *            soll.
     */
    public abstract void calculate(Configuration configuration) throws AllocationException;

    /**
     * methode zum abbruch einer Einteilung
     */
    public abstract void cancel();

    /**
     * Gibt alle Kriterien, geladen über einen Serviceloader, zurück.
     * 
     * @return Die Liste aller verfügbarer Kriterien.
     */
    public List<? extends Criterion> getAllCriteria() {
        Iterator<Criterion> iter = ServiceLoader.load(Criterion.class).iterator();
        ArrayList<Criterion> criteria = new ArrayList<Criterion>();
        while (iter.hasNext()) {
            criteria.add(iter.next());
        }
        return criteria;
    }
}
