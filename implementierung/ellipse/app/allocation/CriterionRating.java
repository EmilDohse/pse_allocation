// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package allocation;

import java.util.NoSuchElementException;

import data.GeneralData;
import data.Project;
import data.Semester;
import data.Student;
import gurobi.GRBException;
import gurobi.GRBLinExpr;

/************************************************************/
/**
 * Das Kriterium sorgt dafür, dass die Bewertungen der Studierenden
 * berücksichtigt werden.
 */
public class CriterionRating implements GurobiCriterion {

    private String name;

    /**
     * Standard-Konstruktor, der den Namen eindeutig setzt.
     */
    public CriterionRating() {
        this.name = "Rating";
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String getName() {
        return this.name;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void useCriteria(Configuration configuration, GurobiAllocator allocator, double weight)
            throws GRBException, NoSuchElementException {
        GRBLinExpr bonus = new GRBLinExpr();
        for (int i = 0; i < configuration.getStudents().size(); i++) {
            for (int j = 0; j < configuration.getTeams().size(); j++) {
                // Bestimme Bewertung des Studenten für das Projekt, zu dem das
                // Team gehört

                Semester semester = GeneralData.getInstance().getCurrentSemester();
                Student student = configuration.getStudents().get(i);
                Project project = configuration.getTeams().get(j).getProject();
                double rating = semester.getLearningGroupOf(student).getRating(project);
                bonus.addTerm(weight * 2 * rating, allocator.getBasicMatrix()[i][j]);
            }
        }
        allocator.getOptimizationTerm().add(bonus);
    }
}