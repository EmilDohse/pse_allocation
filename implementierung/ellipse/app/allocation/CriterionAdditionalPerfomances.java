// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package allocation;

import gurobi.GRBException;
import gurobi.GRBLinExpr;

/************************************************************/
/**
 * Das Kriterium sorgt dafür, dass Studierende, die mehr als die zur Teilnahme
 * am PSE benötigten Teilleistungen bestanden haben, bevorzugt werden.
 */
public class CriterionAdditionalPerfomances implements GurobiCriterion {

    private String name;

    /**
     * Standard-Konstruktor, der den Namen eindeutig setzt.
     */
    public CriterionAdditionalPerfomances() {
        this.name = "AdditionalPerfomances";
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String getName() {
        return this.name;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void useCriteria(Configuration configuration, GurobiAllocator allocator, double weight) throws GRBException {

        // Erzeuge den Zusatz zum Optimierungsterm
        GRBLinExpr bonus = new GRBLinExpr();
        for (int i = 0; i < configuration.getStudents().size(); i++) {

            // Prüfe, ob der Student mehr als die benötigten Teilleistungen
            // abgeschlossen hat
            int amountOfAchievements = configuration.getStudents().get(i).getCompletedAchievements().size();
            int necessaryAmount = configuration.getStudents().get(i).getSPO().getNecessaryAchievements().size();
            if (amountOfAchievements > necessaryAmount) {
                for (int j = 0; j < configuration.getTeams().size(); j++) {
                    bonus.addTerm(weight * 10, allocator.getBasicMatrix()[i][j]);
                }
            }
        }
        allocator.getOptimizationTerm().add(bonus);
    }
}
