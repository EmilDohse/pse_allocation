// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package allocation;

import gurobi.*;

/************************************************************/
/**
 * Der Gurobi Allocator dient zur Berechnung einer Einteilung mit dem ILP
 * Solver Gurobi. Weiterhin stellt er ein Basismodell und einen
 * Optimierungsterm zur Verfügung, welche von den Kriterien verwendet werden.
 */
public class GurobiAllocator extends AbstractAllocator {
    /**
     * Die Basismatrix (NxM) welche anzeigt, ob ein Student n in einm Team m ist.
     * Die Mte Spalte ist das Team der nicht zugeteilten
     */
    private GRBVar[][] basicMatrix;
    /**
     * Über Constraints dynamisch bestimmte Teamgröße. (Hilfsvariablen)
     */
    private GRBVar[] teamSize;
    /**
     * Der Optimierungsterm der von Kriterien erweitert wird und zur Berechnung
     * der Einteilung verwendet wird.
     */
    private GRBLinExpr optTerm;
    /**
     * Das zur Berechnung verwendete Gurobi Model.
     */
    private GRBModel model;

    /**
     * Konstruktor, der das Basismodell initialisiert.
     */
    public GurobiAllocator() {
        
    }
    
    /**
     * Getter für die Basismatrix.
     * 
     * @return Die Basismatrix
     */
    public GRBVar[][] getBasicMatrix() {
        // TODO
        return null;
    }

    /**
     * Getter für das Modell.
     * 
     * @return Das Modell
     */
    public GRBModel getModel() {
        // TODO
        return null;
    }
    
    /**
     * Getter für den Optimierungsterm.
     * 
     * @return Der Optimierungsterm
     */
    public GRBLinExpr getOptimizationTerm() {
        // TODO
        return null;
    }
    
    /**
     * Getter für die, über Constraints bestimmten, Teamgrößen
     * 
     * @return Array von Teamgrößen
     */
    public GRBVar[] getTeamSizes() {
        // TODO
        return null;
    }

    /**
     * Startet die Berechnung einer Einteilung.
     * 
     * @param configuration
     *            Die Konfiguration, nach der die Einteilung berechnet werden soll.
     */
    public void calculate(Configuration configuration) {
    }

    
}
