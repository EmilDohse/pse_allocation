// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package data;

import javax.persistence.Entity;
import javax.persistence.ManyToOne;

import exception.DataException;

/************************************************************/
/**
 * Diese Klasse stellt eine Bewertung eines Studierenden oder einerr Lerngruppe
 * für ein Projekt dar.
 */
@Entity
public class Rating extends ElipseModel {

    public static final int MINIMAL_RATING = 1;
    public static final int MAXIMAL_RATING = 5;

    /**
     * Der Wert der Bewertung.
     */
    private int             rating;
    /**
     * Das Projekt, dem die Bewertung gilt.
     */
    @ManyToOne
    private Project         project;

    // Ebean braucht das hier
    @ManyToOne
    private LearningGroup   learningGroup;

    // TODO macht das Sinn?
    public Rating() throws DataException {
        this(1, new Project());
    }

    public Rating(int rating, Project project) throws DataException {
        super();
        setRating(rating);
        setProject(project);
    }

    public LearningGroup getLearningGroup() {
        return learningGroup;
    }

    /**
     * Setter für die Lerngruppe. Sollte nicht manuell benutzt werden. Zum
     * Setzten reicht es, die Lerngruppe uber LearningGroup.rate() oder
     * LearningGroup.setRatings() hinzuzufügen.
     * 
     * @param learningGroup
     *            Die Lerngruppe, zu dem diese Bewertung gehört.
     * @throws DataException
     *             Wird vom Controller behandelt.
     */
    public void setLearningGroup(LearningGroup learningGroup)
            throws DataException {
        if (learningGroup == null) {
            throw new DataException(IS_NULL_ERROR);
        }
        this.learningGroup = learningGroup;
    }

    /**
     * Getter für den Wert der Bewertung.
     * 
     * @return Der Wert der Bewertung.
     */
    public int getRating() {
        return rating;
    }

    /**
     * Getter für das Projekt der Bewertung.
     * 
     * @return Das Projekt, das bewertet wird.
     */
    public Project getProject() {
        return project;
    }

    /**
     * Setter für den Wert der Bewertung.
     * 
     * @param rating
     *            Der Wert der Bewertung.
     * @throws DataException
     *             Wird vom Controller behandelt.
     */
    public void setRating(int rating) throws DataException {
        if (rating < MINIMAL_RATING || rating > MAXIMAL_RATING) {
            throw new DataException("learningGroup.invalidRating");
        }
        this.rating = rating;
    }

    /**
     * Setter für das Projekt der Bewertung.
     * 
     * @param project
     *            Das Projekt, das bewertet wird.
     * @throws DataException
     *             Wird vom Controller behandelt.
     */
    public void setProject(Project project) throws DataException {
        if (project == null) {
            throw new DataException(IS_NULL_ERROR);
        }
        this.project = project;
    }

}
