// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package data;

import javax.persistence.MappedSuperclass;
import javax.validation.constraints.NotNull;

/************************************************************/
/**
 * Diese Klasse stellt einen Benutzer der Anwendung dar.
 */
@MappedSuperclass
public abstract class User extends ElipseModel implements Comparable<User> {

    /**
     * Der Anmeldename des Benutzers.
     */
    @NotNull
    private String username;
    /**
     * Das Anmeldepasswort des Benutzers.
     */
    @NotNull
    private String password;
    /**
     * Die E-Mail-Adresse des Benutzers.
     */
    @NotNull
    private String emailAddress;
    /**
     * Vorname des Benutzers.
     */
    @NotNull
    private String firstName;
    /**
     * Nachname des Benutzers.
     */
    @NotNull
    private String lastName;

    public User() {
        this("defautl_username", "1234", "default_email", "default_firstName", "default_lastName");
    }

    public User(String username, String password, String emailAddress,
            String firstName, String lastName) {
        this.username = username;
        this.password = password;
        this.emailAddress = emailAddress;
        this.firstName = firstName;
        this.lastName = lastName;
    }

    /**
     * Getter für den Benutzernamen.
     * 
     * @return Der Benutzername.
     */
    public String getUserName() {
        return username;
    }

    /**
     * Getter für das Benutzerpasswort.
     * 
     * @return Das Benutzerpasswort.
     */
    public String getPassword() {
        return password;
    }

    /**
     * Getter für die E-Mail-Addresse.
     * 
     * @return Die E_Mail-Addresse.
     */
    public String getEmailAddress() {
        return emailAddress;
    }

    /**
     * Getter für den Vornamen.
     * 
     * @return Der Vorname.
     */
    public String getFirstName() {
        return firstName;
    }

    /**
     * Getter für den Nachnamen.
     * 
     * @return Der Nachname.
     */
    public String getLastName() {
        return lastName;
    }

    /**
     * Getter für den kompletten Namen, bestehend aus Vor- und Nachnamen.
     * 
     * @return Der Name.
     */
    public String getName() {
        return firstName + " " + lastName;
    }

    /**
     * Setter für den Benutzernamen.
     * 
     * @param username
     *            Der Benutzername.
     */
    public void setUserName(String username) {
        this.username = username;
    }

    /**
     * Setter für das Benutzerpasswort.
     * 
     * @param password
     *            Das Passwort
     */
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Setter für die E-Mail-Addresse.
     * 
     * @param email
     *            Die E-Mail-Adresse
     */
    public void setEmailAddress(String email) {
        this.emailAddress = email;
    }

    /**
     * Setter für den Vornamen.
     * 
     * @param firstName
     *            Der Vorname.
     */
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     * Setter für den Nachnamen.
     * 
     * @param lastName
     *            Der Nachname.
     */
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    @Override
    public int compareTo(User o) {
        int temp = lastName.compareTo(o.getLastName());
        if (temp == 0) {
            return firstName.compareTo(o.getFirstName());
        } else {
            return temp;
        }
    }

}
