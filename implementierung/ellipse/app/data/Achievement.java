// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package data;

import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.validation.constraints.NotNull;

import com.avaje.ebean.Ebean;

/************************************************************/
/**
 * Diese Klasse stellt eine Teilleistung im Studium dar.
 */
@Entity
public class Achievement extends ElipseModel
        implements Comparable<Achievement> {

    private static final String NAME = "name";
    /**
     * Der Name der Teilleistung.
     */
    @NotNull
    @Column(name = NAME)
    private String              name;

    public Achievement() {
        this("default_name");
    }

    public Achievement(String name) {
        super();
        this.name = name;
    }

    /**
     * Getter für den Namen der Teilleistung.
     * 
     * @return Der Name der Teilleistung.
     */
    public String getName() {
        return name;
    }

    /**
     * Setter für den Namen der Teilleistung.
     * 
     * @param name
     *            Der Name der Teilleistung.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Diese Methode gibt alle Teilleistungen zurück.
     * 
     * @return Alle existierenden Teilleistungen.
     */
    public static List<Achievement> getAchievements() {
        return ElipseModel.getAll(Achievement.class);
    }

    /**
     * Diese Methode gibt eine bestimmte Teilleistung zurück, die durch ihren
     * Namen identifiziert wird.
     * 
     * @param name
     *            Der Name der Teilleistung.
     * @return Die bestimmte Teilleistung. Null falls keine Teilleistung den
     *         übergebenen Namen hat.
     */
    public static Achievement getAchievement(String name) {
        return Ebean.find(Achievement.class).where().eq(NAME, name)
                .findUnique();
    }

    @Override
    public int compareTo(Achievement o) {
        return name.compareTo(o.getName());
    }

}
