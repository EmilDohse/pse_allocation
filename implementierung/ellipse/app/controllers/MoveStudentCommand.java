// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package controllers;

import java.util.List;

import data.Allocation;
import data.Student;
import data.Team;

/************************************************************/
/**
 * Konkretes Kommando zum verschieben eines Studierenden von seinem aktuellen
 * Team in ein neues.
 */
public class MoveStudentCommand extends EditAllocationCommand {

    private Allocation    allocation;
    private List<Student> students;
    private Team          newTeam;
    private Team          oldTeam;

    /**
     * Erzeugt ein neues Kommando zum verschieben eines Studierenden.
     * 
     * @param allocation
     *            Einteilung, auf die sich die Änderung bezieht.
     * @param student
     *            Studierender, der verschoben werden soll.
     * @param newTeam
     *            Neues Team, in das der Studierende eingeteilt wird.
     */
    public MoveStudentCommand(Allocation allocation, List<Student> students, Team newTeam) {
        super();
        this.allocation = allocation;
        this.students = students;
        this.newTeam = newTeam;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void execute() {

        for (Student s : students) {
            oldTeam = allocation.getTeam(s);
            // TODO hier eine warnung werfen falls die teamgröße überschritten
            // wird
            oldTeam.doTransaction(() -> {
                oldTeam.removeMember(s);
            });
            newTeam.doTransaction(() -> {
                newTeam.addMember(s);
            });
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void undo() {
        for (Student s : students) {
            // TODO hier eine warnung werfen falls die teamgröße überschritten
            // wird
            newTeam.doTransaction(() -> {
                newTeam.removeMember(s);
            });
            oldTeam.doTransaction(() -> {
                oldTeam.addMember(s);
            });
        }
    }
}
