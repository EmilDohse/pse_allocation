# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET		/							controllers.IndexPageController.indexPage()
GET		/index						controllers.IndexPageController.indexPage()
GET 	/register					controllers.IndexPageController.registerPage()
GET 	/reset						controllers.IndexPageController.passwordResetPage()
POST 	/requestReset				controllers.IndexPageController.passwordResetForm()
GET		/resetPassword:code			controllers.IndexPageController.resetPassword(code: String)
GET 	/verify:code				controllers.IndexPageController.verificationPage(code: String)
POST 	/create						controllers.IndexPageController.register()
GET		/redirect*url				controllers.IndexPageController.notAllowedInCurrentState(url: String)

GET		/studentOld/changeForm		controllers.StudentPageController.changeFormPage()	
POST	/studentOld/changeData		controllers.StudentPageController.changeData()

GET 	/student					controllers.StudentPageController.learningGroupPage()
GET 	/student/					controllers.StudentPageController.learningGroupPage()
GET 	/student/group				controllers.StudentPageController.learningGroupPage()
GET 	/student/rating				controllers.StudentPageController.ratingPage()
GET 	/student/results			controllers.StudentPageController.resultsPage()
GET 	/student/account			controllers.StudentPageController.accountPage()
GET		/student/reverify			controllers.StudentPageController.sendNewVerificationLink()
POST 	/student/rate				controllers.StudentPageController.rate()
POST 	/student/edit				controllers.StudentPageController.editAccount()
POST    /student/leaveLG            controllers.StudentPageController.leaveLearningGroup()
POST	/student/setLearningGroup	controllers.StudentPageController.setLearningGroup()
GET		/student/redirect*url		controllers.StudentPageController.notAllowedInCurrentState(url: String)

GET		/adviser					controllers.AdviserPageController.projectsPage(id: Int = -1)
GET		/adviser/					controllers.AdviserPageController.projectsPage(id: Int = -1)
GET 	/adviser/projects/:id		controllers.AdviserPageController.projectsPage(id: Int)
GET		/adviser/account			controllers.AdviserPageController.accountPage()
GET 	/adviser/add				controllers.AdviserPageController.addProject()
POST 	/adviser/remove				controllers.AdviserPageController.removeProject()
POST 	/adviser/edit				controllers.AdviserPageController.editProject()
POST 	/adviser/join				controllers.AdviserPageController.joinProject()
POST 	/adviser/leave				controllers.AdviserPageController.leaveProject()
POST 	/adviser/saveGrades			controllers.AdviserPageController.saveStudentsGrades()
POST 	/adviser/editAccount		controllers.AdviserPageController.editAccount()
GET		/adviser/redirect*url		controllers.AdviserPageController.notAllowedInCurrentState(url: String)

GET		/admin						controllers.AdminPageController.projectPage()
GET		/admin/						controllers.AdminPageController.projectPage()
GET 	/admin/projects				controllers.AdminPageController.projectPage()
GET 	/admin/advisers				controllers.AdminPageController.adviserPage()
GET 	/admin/allocation			controllers.AdminPageController.allocationPage()
GET 	/admin/results				controllers.AdminPageController.resultsPage()
GET 	/admin/exportImport			controllers.AdminPageController.exportImportPage()
GET 	/admin/studentEdit			controllers.AdminPageController.studentEditPage()
GET 	/admin/properties			controllers.AdminPageController.propertiesPage()
GET 	/admin/addSemester			controllers.AdminPropertiesController.addSemester()
GET 	/admin/addSPO				controllers.AdminPropertiesController.addSPO()
GET 	/admin/projectEdit/:id		controllers.AdminPageController.projectEditPage(id: Int)
GET		/admin/account				controllers.AdminPageController.accountPage()
GET		/admin/redirect*url			controllers.AdminPageController.notAllowedInCurrentState(url: String)

POST 	/admin/addProject			controllers.AdminProjectController.addProject()
POST 	/admin/removeProject		controllers.AdminProjectController.removeProject()
POST 	/admin/editProject			controllers.AdminProjectController.editProject()

POST 	/admin/addAdviser			controllers.GeneralAdminController.addAdviser()
POST 	/admin/removeAdviser		controllers.GeneralAdminController.removeAdviser()
POST 	/admin/addAllocation		controllers.GeneralAdminController.addAllocation()
POST 	/admin/addStudent			controllers.GeneralAdminController.addStudent()
POST 	/admin/removeStudent		controllers.GeneralAdminController.removeStudent()
POST    /admin/removeAllocationFromQueue    controllers.GeneralAdminController.removeAllocationFromQueue()
POST 	/admin/editAccount			controllers.GeneralAdminController.editAccount()

POST 	/admin/addSemester			controllers.AdminPropertiesController.addSemester()
POST 	/admin/removeSemester		controllers.AdminPropertiesController.removeSemester()
POST 	/admin/addSPO				controllers.AdminPropertiesController.addSPO()
POST 	/admin/removeSPO			controllers.AdminPropertiesController.removeSPO()
POST 	/admin/editSemester			controllers.AdminPropertiesController.editSemester()
POST 	/admin/addAchievement		controllers.AdminPropertiesController.addAchievement()
POST 	/admin/changeSPO			controllers.AdminPropertiesController.changeSPO()
POST	/admin/changeSMTP			controllers.AdminPropertiesController.editSMTPOptions()

#POST 	/admin/swapStudents			controllers.AdminEditAllocationController.swapStudents()
#POST 	/admin/moveStudents			controllers.AdminEditAllocationController.moveStudents()
POST	/admin/editAllocation		controllers.AdminEditAllocationController.editAllocation()
POST 	/admin/publishAllocation	controllers.AdminEditAllocationController.publishAllocation()
POST 	/admin/duplicateAllocation	controllers.AdminEditAllocationController.duplicateAllocation()
POST 	/admin/removeAllocation		controllers.AdminEditAllocationController.removeAllocation()
POST 	/admin/undoAllocationEdit	controllers.AdminEditAllocationController.undoAllocationEdit()

POST	/admin/import				controllers.AdminImportExportController.importGeneral()
POST 	/admin/exportAllocation		controllers.AdminImportExportController.exportAllocation()
POST 	/admin/exportSPO			controllers.AdminImportExportController.exportSPO()
POST 	/admin/exportProjects		controllers.AdminImportExportController.exportProjects()
POST 	/admin/exportCMSData		controllers.AdminImportExportController.exportCMSData()
POST 	/admin/exportStudents		controllers.AdminImportExportController.exportStudents()
POST	/admin/exportGrades			controllers.AdminImportExportController.exportGrades()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)

#Pac4j controller f√ºr callback und logout Prozedur
GET   /callback    				@org.pac4j.play.CallbackController.callback()
GET    /logout     					@org.pac4j.play.ApplicationLogoutController.logout()
POST   /callback    				@org.pac4j.play.CallbackController.callback()