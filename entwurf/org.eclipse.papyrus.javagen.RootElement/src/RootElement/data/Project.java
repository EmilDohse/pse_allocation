// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package RootElement.data;

import RootElement.data.Rating;
import RootElement.data.Semester;
import RootElement.data.Student;

/************************************************************/
/**
 * 
 */
public class Project {
	/**
	 * Der Name des Projektes.
	 */
	private String name;
	/**
	 * Die minimale Anzahl der Teilnehmer einer Gruppe für dieses Projekt.
	 */
	private int minTeamSize;
	/**
	 * Die maximale Anzahl der Teilnehmer einer Gruppe für dieses Projekt.
	 */
	private int maxTeamSize;
	/**
	 * Die Projektbeschreibung.
	 */
	private String projectInfo;
	/**
	 * URL zu der Website des Projektes.
	 */
	private String projectURL;
	/**
	 * Teams des Projekt
	 */
	private Team[] teams;
	/**
	 * Getter für den Namen des Projektes.
	 * @return Der Name des Projektes.
	 */
	public String getName() {
	    return name;
	}
	/**
	 * Getter der maximalen Größe für Teams dieses Projektes.
	 * @return Die maximale Teamgröße.
	 */
	public int getMaxTeamSize() {
	    return this.maxTeamSize;
	}
	/**
     * Getter der minimalen Größe für Teams dieses Projektes.
     * @return Die minimale Teamgröße.
     */
    public int getMinTeamSize() {
        return this.minTeamSize;
    }
    /**
     * Getter für die Information über dieses Projektes.
     * @return Die Information des Projektes.
     */
    public String getProjectInfo() {
        return this.projectInfo;
    }
    /**
     * Getter für die URL des Projektes.
     * @return Die URL des Projektes.
     */
    public String getProjectURL() {
        return this.projectURL;
    }
    /**
     * Getter für die Teams des Projektes.
     * @return Die Teams des Projektes.
     */
    public Team[] getTeams() {
        return this.teams;
    }
    
    /**
     * Setter für den Namen des Projektes.
     * @param name Der Name des Projektes.
     */
    public void setName(String name) {
        this.name = name;
    }
    /**
     * Setter der maximalen Größe für Teams dieses Projektes.
     * @param maxTeamSize Die maximale Größe für Teams dieses Projektes.
     */
    public void setMaxTeamSize(int maxTeamSize) {
        this.maxTeamSize = maxTeamSize;
    }
    /**
     * Setter der minimalen Größe für Teams dieses Projektes.
     * @param minTeamSize Die minimale Größe für Teams dieses Projektes.
     */
    public void setMinTeamSize(int minTeamSize) {
        this.minTeamSize = minTeamSize;
    }
    /**
     * Setter für die Information über dieses Projektes.
     * @param projektInfo Die Information des Projektes.
     */
    public void setProjectInfo(String projectInfo) {
        this.projectInfo = projectInfo;
    }
    /**
     * Setter für die URL des Projektes.
     * @param projectURL Die URL des Projektes.
     */
    public void setProjectURL(String projectURL) {
        this.projectURL = projectURL;
    }
    /**
     * Setter für die Teams des Projektes.
     * @param team Die Teams des Projektes.
     */
    public void setTeams(Team[] teams) {
        this.teams = teams;
    }
    
	/**
	 * Diese Methode gibt alle Projekte zurück.
	 * @return projects Alle Projekte.
	 */
	public static RootElement.data.Project getProjects() {
	}

	/**
	 * Diese Methode gibt ein spezifisches Projekt zurück, welches über seinen Namen und
	 * das Semester, in dem es erstellt wurde, identifiziert wird.
	 * @param name Der Name des Projektes.
	 * @param semester Das Semester, in dem das Projekt erstellt wurde.
	 * @return project Das spezifiscche Projekt.
	 */
	public static RootElement.data.Project getProject(String name, Semester semester) {
	}

	/**
	 * Diese Methode gibt die Bewertung eines spezifischen Studenten für dieses Projekt zurück.
	 * @param student Der Student, dessen Bewertung zurückgegeben werdedn soll.
	 * @return rating Die Bewertung des Studenten.
	 */
	public Rating getRating(Student student) {
	}
};
