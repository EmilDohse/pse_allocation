// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package RootElement.data;

import RootElement.data.Achievement;
import RootElement.data.LearningGroup;
import RootElement.data.Project;
import RootElement.data.Rating;
import RootElement.data.SPO;
import RootElement.data.Semester;
import RootElement.data.Team;
import RootElement.data.User;

/************************************************************/
/**
 * This class represents a student participating in PSE.
 **/
public class Student extends User {
	/**
	 * The student's matriculation number.
	 */
	public int matriculationNumber;
	/**
	 * The semesters the student has registered 
	 */
	public Semester[] registeredSemesters;
	/**
	 * The students SPO.
	 */
	public SPO spo;
	/**
	 * The achievements accomplished by the student.
	 */
	public Achievement[] completedAchievements;
	/**
	 * True if student has registered for PSE in campus management system, false otherwise.
	 */
	public boolean registeredPSE;
	/**
	 * True if student has registered for TSE in campus management system, false otherwise.
	 */
	public boolean registeredTSE;
	/**
	 * The student's PSE grade.
	 */
	public int gradePSE;
	/**
	 * The student's TSE grade.
	 */
	public int gradeTSE;
	/**
	 * The student'sReceivable Achievements.
	 */
	public Achievement[] oralTestAchievment;
	/**
	 * The first semester the student registered at PSE.
	 */
	public Semester startSemester;
	/**
	 * The student's current semester at first registration.
	 */
	public int semesterAtRegistration;

	/**
	 * This method returns a specific student by the matriculation number.
	 * @param matriculationNumber The matriculation  number of the student.
	 * @return student The student you're searching for.
	 */
	public static RootElement.data.Student getStudent(int matriculationNumber) {
	}

	/**
	 * This method returns all students.
	 * @return students All students.
	 */
	public static RootElement.data.Student getStudents() {
	}

	/**
	 * This method returns the current learning group of the student.
	 * @return learningGroup The student's current learning group.
	 */
	public LearningGroup getCurrentLearningGroup() {
	}

	/**
	 * This method sets the current learning group of the student.
	 * @param learningGroup The learning group the student is joining.
	 */
	public void setCurrentLearningGroup(LearningGroup learningGroup) {
	}

	/**
	 * This method returns the students rating for a specific project.
	 * @param project The project.
	 * @return rating The student's rating for a specific project.
	 */
	public Rating getCurrentRating(Project project) {
	}

	/**
	 * This method sets the students rating for a specific project.
	 * @param project The project the student is rating.
	 * @param rating The stundent's rating.
	 */
	public void setCurrentRating(Project project, Rating rating) {
	}

	/**
	 * This method returns the student's current project.
	 * @return project The student's project.
	 */
	public Project getCurrentProject() {
	}

	/**
	 * This method returns the student's team.
	 * @return team The student's team.
	 */
	public Team getCurrentTeam() {
	}

	/**
	 * This method returns the student's current semester.
	 * @return semester The student's current semester.
	 */
	public int getCurrentSemester() {
	}
};
