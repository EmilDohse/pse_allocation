// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package data;

import java.util.List;

/************************************************************/
/**
 * Diese Klasse stellt einen Studierenden dar, der am PSE teilnimmt.
 **/
public class Student extends User {
	/**
	 * Die Matrikelnummer des Studierenden.
	 */
	private int matriculationNumber;
	/**
	 * Die Semester, in denen der student registriert ist. 
	 */
	private List<Semester> registeredSemesters;
	/**
	 * Die SPO des Studierenden
     */
	private SPO spo;
	/**
	 * Die Lerngruppen des Studierenden.
	 */
	private List<LearningGroup> learningGroups;
	/**
	 * Die bestandenen Teilleistungen.
	 */
	private Achievement[] completedAchievements;
	/**
	 * Wahr, wenn sich der Studierende bereits im Campus Management System für das PSE angemeldet hat.
	 * Falsch, sonst.
	 */
	private boolean registeredPSE;
	/**
	 * Wahr, wenn sich der Studierende bereits im Campus Management System für das TSE angemeldet hat.
     * Falsch, sonst.
	 */
	private boolean registeredTSE;
	/**
	 * Die PSE-Note des Studierenden.
	 */
	private int gradePSE;
	/**
	 * Die TSE-Note des Studierenden.
	 */
	private int gradeTSE;
	/**
	 * Die noch ausstehenden Teilleistungen des Studierenden.
	 */
	private Achievement[] oralTestAchievement;
	/**
	 * Das Semester, in dem sich der Studierende zum Zeitpunkt der Registrierung befindet.
	 */
	private int semesterAtRegistration;
	/**
	 * Wahrheitswert, ob die E-Mail-Adresse verifiziert wurde.
	 */
	private boolean emailVerified;
	
	/**
	 * Fügt eine Lerngruppe hinzu
	 * 
	 * @param learningGroup Lerngruppe, die hinzugefügt wird
	 */
	public void addLearningGroup(LearningGroup learningGroup) {
		
	}
	
	/**
	 * Entfernt eine Lerngruppe
	 * 
	 * @param learningGroup Lerngruppe, die entfernt wird
	 */
	public void removeLearningGroup(LearningGroup learningGroup) {
		
	}
	
	/**
	 * Fügt ein Semester als registriertes Semester hinzu
	 * 
	 * @param semester Semester, das hinzugefügt wird
	 */
	public void addRegistratetSemester(Semester semester) {
		
	}
	
	/**
	 * Entfernt ein Semester als registriertes Semester
	 * 
	 * @param semester Semester, das entfernt wird
	 */
	public void removeRegistratetSemester(Semester semester) {
		
	}
	
	/**
	 * Getter für die Matrikelnummer.
	 * 
	 * @return Die Matrikelnummer.
	 */
	public int getMatriculationNumber() {
	    return this.matriculationNumber;
	}
	
	/**
     * Getter für die Semester, in denen der Studierende registriert ist.
     * 
     * @return Die Semester, in denen der Studierende registriert ist.
     */
	public List<Semester> getRegisteredSemesters() {
	    return this.registeredSemesters;
	}
	
	/**
	 * Getter für die SPO des Studierenden.
	 * 
	 * @return Die SPO des Studierenden.
	 */
	public SPO getSPO() {
	    return this.spo;
	}
	
	/**
     * Getter für die Lerngruppen des Studierenden.
     * 
     * @return Die Lerngruppen des Studierenden.
     */
	public List<LearningGroup> getLearningGroups() {
	    return this.learningGroups;
	}
	
	/**
     * Getter für die abgeschlossenen Teilleistungen des Studierenden.
     * 
     * @return Die abgeschlossenen Teilleistungen des Studierenden.
     */
	public Achievement[] getCompletedAchievements() {
	    return this.completedAchievements;
	}
	
	/**
     * Getter für die Variable, ob der Studierende im Campus Management System für das PSE angemeldet ist.
     * 
     * @return Wahr, wenn er angemeldet ist, falsch sonst.
     */
	public boolean isRegisteredPSE() {
	    return this.registeredPSE;
	}
	
	/**
     * Getter für die Variable, ob der Studierende im Campus Management System für das TSE angemeldet ist.
     * 
     * @return Wahr, wenn er angemeldet ist, falsch sonst.
     */
	public boolean isRegisteredTSE() {
	    return this.registeredTSE;
	}
	
	/**
     * Getter für die PSE-Note des Studierenden.
     * 
     * @return Die Note des Studierenden für das PSE.
     */
	public int getGradePSE() {
	    return this.gradePSE;
	}
	
	/**
     * Getter für die TSE-Note des Studierenden.
     * 
     * @return Die Note des Studierenden für das TSE.
     */
	public int getGradeTSE() {
	    return this.gradeTSE;
	}
	
	/**
     * Getter für die noch ausstehenden Teilleistungen des Studierenden.
     * 
     * @return Die noch ausstehenden Teilleistungen des Studierenden.
     */
	public Achievement[] getOralTestAchievement() {
	    return this.oralTestAchievement;
	}
	
	/**
     * Getter für das Semester des Studierenden.
     * 
     * @return Das aktuelle Semester des Studierenden.
     */
	public int getSemester() {
	    return 0;
	}
	
	/**
     * Setter für die Matrikelnummer.
     * @param matriculationNumber Die Matrikelnummer des Studierenden.
     */
    public void setMatriculationNumber(int  matriculationNumber) {
        this.matriculationNumber = matriculationNumber;
    }
    
    /**
     * Setter für die Semester, in denen der Studierende registriert ist.
     * 
     * @param registeredSemesters Die Semester, in denen der Studierende registriert ist.
     */
    public void setRegisteredSemesters(List<Semester> registeredSemesters) {
        this.registeredSemesters = registeredSemesters;
    }
    
    /**
     * Setter für die SPO des Studierenden.
     * 
     * @param spo Die SPO des Studierenden.
     */
    public void setSPO(SPO spo) {
        this.spo = spo;
    }
    
    /**
     * Setter für die Lerngruppen des Studierenden.
     * 
     * @param learningGroups Die Lerngruppen, in denen der Studierende war.
     */
    public void setLearningGroups(List<LearningGroup> learningGroups) {
        this.learningGroups = learningGroups;
    }
    
    /**
     * Setter für die abgeschlossenen Teilleistungen des Studierenden.
     * 
     * @param completedAchievements Die vom Studierenden abgeschlossenen Teilleistungen.
     */
    public void setCompletedAchievements(Achievement[] completedAchievements) {
        this.completedAchievements = completedAchievements;
    }
    
    /**
     * Setter für die Variable, ob der Studierende im campus management system für das PSE angemeldet ist.
     * 
     * @param registeredPSE Wahr, wenn der Studierende im CMS angemeldet ist, sonst false
     */
    public void setRegisteredPSE(boolean registeredPSE) {
        this.registeredPSE = registeredPSE;
    }
    
    /**
     * Setter für die Variable, ob der Studierende im campus management system für das TSE angemeldet ist.
     * 
     * @param registeredTSE Wahr, wenn der Studierende im CMS angemeldet ist, sonst false
     */
    public void setRegisteredTSE(boolean registeredTSE) {
        this.registeredTSE = registeredTSE;
    }
    
    /**
     * Setter für die PSE-Note des Studierenden.
     * 
     * @param Die Note des Studierenden fürs PSE.
     */
    public void setGradePSE(int gradePSE) {
        this.gradePSE = gradePSE;
    }
    
    /**
     * Setter für die TSE-Note des Studierenden.
     * 
     * @param gradeTSE Die Note des Studierenden fürs TSE.
     */
    public void setGradeTSE(int gradeTSE) {
        this.gradeTSE = gradeTSE;
    }
    
    /**
     * Setter für die noch ausstehenden Teilleistungen des Studierenden.
     * 
     * @param oralTestAchievement Die noch aussteheneden Teilleistungen des Studierenden.
     */
    public void setOralTestAchievement(Achievement[] oralTestAchievement) {
        this.oralTestAchievment = oralTestAchievement;
    }
    
    /**
     * Setter für das Semester des Studierenden.
     * 
     * @param semesterAtRegistration Das Semester des Studierenden.
     */
    public void setSemester(int semesterAtRegistration) {
    	//TODO Was soll hier passieren? Bezeichner widersprechen sich
        this.semesterAtRegistration = semesterAtRegistration;
    }
     
	/**
	 * Diese Methode gibt einen spezifischen Studierenden zurück, der durch seine Matrikelnummer
	 * identifiziert wird.
	 * 
	 * @param matriculationNumber Die Matrikelnummer des Studierenden.
	 * @return student Der Studierende.
	 */
	public static Student getStudent(int matriculationNumber) {
		//TODO
				return null;
	}

	/**
	 * Diese Methode gibt alle Studierenden zurück.
	 * 
	 * @return students Alle Studierende.
	 */
	public static Student[] getStudents() {
		//TODO
				return null;
	}

	/**
	 * Diese Methode gibt die Lerngruppe des Studierenden zurück.
	 * 
	 * @return learningGroup Die Lerngruppe des Studierenden.
	 */
	public LearningGroup getCurrentLearningGroup() {
		//TODO
				return null;
	}

	/**
	 * Diese Methode weist dem Studierenden eine neue Lerngruppe zu.
	 * 
	 * @param learningGroup Die neue Lerngruppe des Studierenden.
	 */
	public void setCurrentLearningGroup(LearningGroup learningGroup) {
	}

	/**
	 * Diese Methode gibt die Bewertung des Studiereden zu einem bestimmten Projekt zurück.
	 * 
	 * @param project Das Projekt.
	 * @return rating Die Bewertung des Studierenden für das bestimmte Projekt.
	 */
	public Rating getCurrentRating(Project project) {
		//TODO
				return null;
	}

	/**
	 * Diese Methode setzt eine Bewertung des Studierenden für ein bestimmtes Projekt.
	 * 
	 * @param project Das zu bewertende Projekt.
	 * @param rating Die Bewertung des Studierenden.
	 */
	public void setCurrentRating(Project project, Rating rating) {
	}

	/**
	 * Diese Methode gibt das Projekt zurück, dem der Studierende zugeteilt ist.
	 * 
	 * @return Das Projekt des Studierenden.
	 */
	public Project getCurrentProject() {
		//TODO
				return null;
	}

	/**
	 * Diese Methode gibt das Team, in dem der Studierende sich befindet, zurück.
	 * 
	 * @return Das Team des Studierenden.
	 */
	public Team getCurrentTeam() {
		//TODO
				return null;
	}

	/**
	 * Diese Methode gibt das aktuelle Semester des Studierenden zurück.
	 * 
	 * @return Das Semester, in dem Studierende sich aktuell befindet.
	 */
	public int getCurrentSemester() {
		//TODO
				return 0;
	}
	
	/**
	 * Diese Methode gibt zurück, ob die E-Mail-Adresse verifiziert wurde.
	 * 
	 * @return wahr, wenn die E-Mail-Adresse verifiziert wurde, falsch sonst.
	 */
	public boolean isEmailVerified() {
		//TODO
				return false;
	}

	/**
	 * Diese Methode setzt per Boolean, ob die E-Mail-Adresse verifiziert wurde oder nicht.
	 * 
	 * @param isEmailVerified wahr, wenn die E-Mail-Adresse verifiziert wurde, falsch sonst.
	 */
	public void setIsEmailVerified(boolean isEmailVerified) {
	}
}
