// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package data;

/************************************************************/
/**
 * Klasse, die ein Project repräsentiert
 */
public class Project {
	/**
	 * Der Name des Projektes.
	 */
	private String name;
	/**
	 * Die minimale Anzahl der Teilnehmer einer Gruppe für dieses Projekt.
	 */
	private int minTeamSize;
	/**
	 * Die maximale Anzahl der Teilnehmer einer Gruppe für dieses Projekt.
	 */
	private int maxTeamSize;
	/**
	 * Die Projektbeschreibung.
	 */
	private String projectInfo;
	/**
	 * URL zu der Website des Projektes.
	 */
	private String projectURL;
	/**
	 * Teams des Projekt
	 */
	private Team[] teams;
	/**
	 * Das Institut, welches das Projekt anbietet.
	 */
	private String institute;
	/**
	 * Semester in dem das Projekt angeboten wird
	 */
	private Semester semester;
	/**
	 * Betreuer des Projekts
	 */
	private Adviser[] advisers;
	
	/**
	 * Getter für die Betreuer des Projekts
	 * 
	 * @return Betreuer des Projekts
	 */
	public Adviser[] getAdvisers() {
		return advisers;
	}
	
	/**
	 * Setter für die Betreuer des Projekts
	 * 
	 * @param advisers Betreuer des Projekts
	 */
	public void setAdvisers(Adviser[] advisers) {
		this.advisers = advisers;
	}
	
	/**
	 * Fügt dem Projekts einen Betreuer hinzu
	 * 
	 * @param adviser Betreuer der hinzugefügt wird
	 */
	public void addAdviser(Adviser adviser) {
		
	}
	
	/**
	 * Entfernt einen Betreuer vom Projekt
	 * 
	 * @param adviser Betreuer der entfernt wird
	 */
	public void removeAdviser(Adviser adviser) {
		
	}
	
	/**
	 * Getter für das Semester des Projekts
	 * 
	 * @return Semester des Projekts
	 */
	public Semester getSemester() {
		return semester;
	}
	
	/**
	 * Setter für das Semester des Projekts
	 * 
	 * @param semester Semester des Projekts
	 */
	public void setSemester(Semester semester) {
		this.semester = semester;
	}
	
	/**
	 * Getter für den Namen des Projektes.
	 * 
	 * @return Der Name des Projektes.
	 */
	public String getName() {
		return name;
	}

	/**
	 * Getter der maximalen Größe für Teams dieses Projektes.
	 * 
	 * @return Die maximale Teamgröße.
	 */
	public int getMaxTeamSize() {
		return this.maxTeamSize;
	}

	/**
	 * Getter der minimalen Größe für Teams dieses Projektes.
	 * 
	 * @return Die minimale Teamgröße.
	 */
	public int getMinTeamSize() {
		return this.minTeamSize;
	}

	/**
	 * Getter für die Information über dieses Projektes.
	 * 
	 * @return Die Information des Projektes.
	 */
	public String getProjectInfo() {
		return this.projectInfo;
	}

	/**
	 * Getter für die URL des Projektes.
	 * 
	 * @return Die URL des Projektes.
	 */
	public String getProjectURL() {
		return this.projectURL;
	}

	/**
	 * Getter für die Teams des Projektes.
	 * 
	 * @return Die Teams des Projektes.
	 */
	public Team[] getTeams() {
		return this.teams;
	}

	/**
	 * Setter für den Namen des Projektes.
	 * 
	 * @param name
	 *            Der Name des Projektes.
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Setter der maximalen Größe für Teams dieses Projektes.
	 * 
	 * @param maxTeamSize
	 *            Die maximale Größe für Teams dieses Projektes.
	 */
	public void setMaxTeamSize(int maxTeamSize) {
		this.maxTeamSize = maxTeamSize;
	}

	/**
	 * Setter der minimalen Größe für Teams dieses Projektes.
	 * 
	 * @param minTeamSize
	 *            Die minimale Größe für Teams dieses Projektes.
	 */
	public void setMinTeamSize(int minTeamSize) {
		this.minTeamSize = minTeamSize;
	}

	/**
	 * Setter für die Information über dieses Projektes.
	 * 
	 * @param projektInfo
	 *            Die Information des Projektes.
	 */
	public void setProjectInfo(String projectInfo) {
		this.projectInfo = projectInfo;
	}

	/**
	 * Setter für die URL des Projektes.
	 * 
	 * @param projectURL
	 *            Die URL des Projektes.
	 */
	public void setProjectURL(String projectURL) {
		this.projectURL = projectURL;
	}

	/**
	 * Setter für die Teams des Projektes.
	 * 
	 * @param team
	 *            Die Teams des Projektes.
	 */
	public void setTeams(Team[] teams) {
		this.teams = teams;
	}

	/**
	 * Gibt den Institutsnamen des Institutes zurück, welches das Projekt
	 * anbietet.
	 * 
	 * @return den Namen
	 */
	public String getInstitute() {
		return institute;
	}

	/**
	 * Setzt den Institutsnamen.
	 * 
	 * @param institute
	 *            der Name des Instituts.
	 */
	public void setInstitute(String institute) {
		this.institute = institute;
	}

	/**
	 * Diese Methode gibt alle Projekte zurück.
	 * 
	 * @return Alle Projekte.
	 */
	public static Project[] getProjects() {
		// TODO
		return null;
	}

	/**
	 * Diese Methode gibt ein spezifisches Projekt zurück, welches über seinen
	 * Namen und das Semester, in dem es erstellt wurde, identifiziert wird.
	 * 
	 * @param name
	 *            Der Name des Projektes.
	 * @param semester
	 *            Das Semester, in dem das Projekt erstellt wurde.
	 * @return Das spezifische Projekt.
	 */
	public static Project getProject(String name, Semester semester) {
		// TODO
		return null;
	}

	/**
	 * Diese Methode gibt die Bewertung eines spezifischen Studenten für dieses
	 * Projekt zurück.
	 * 
	 * @param student
	 *            Der Student, dessen Bewertung zurückgegeben werdedn soll.
	 * @return Die Bewertung des Studenten.
	 */
	public Rating getRating(Student student) {
		// TODO
		return null;
	}
}
