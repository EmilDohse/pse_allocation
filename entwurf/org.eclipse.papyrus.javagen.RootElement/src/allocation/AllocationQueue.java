// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package allocation;

import java.util.List;

/************************************************************/
/**
 * Die Queue dient dazu, die Berechnung von Einteilungen als Stapelverarbeitung zu realisieren.
 */
public class AllocationQueue {
	/**
	 * Die intern verwendete queue
	 */
	private List<Configuration> configurationQueue;
	/**
	 * Der Singelton der der Allocation queue
	 */
	private static AllocationQueue instance;
	/**
	 * Der Alocator der zur Berechnung verwendet wird
	 */
	private AbstractAllocator Allocator;
	/**
	 * Die Konfiguration die aktuell zur Berechnung verwendet wird
	 */
	private Configuration currentlyCalculatedConfiguration;
	
	/**
	 * Privater Konstruktor der zur Instanziierung des Singletons verwendet wird.
	 */
	private AllocationQueue() {
	    
	}
	/**
	 * Gibt die eine existierende Instanz der AllocationQueue (Singleton) zur端ck	 * 
	 * @return  Die Instanz der AllocationQueue
	 */
	public static AllocationQueue getInstance() {
		return instance;
	}

	/**
	 * F端gt der Berechnungsqueue eine Konfiguration hinzu, die zur Berechnung verwendet werden soll
	 *  
	 * @param configuration Die Konfiguration, die zur Berechnungsqueue hinzugef端gt wird
	 */
	public void addToQueue(Configuration configuration) {
	}

	/**
	 * Nimmt eine Konfiguration aus der Berechnungsqueue heraus. Falls diese Konfiguration bereits berechnet wird, wird die Berechnung abgebrochen
	 * 
	 * @param configuration Die Konfiguration, die entfernt werden soll
	 */
	public void cancelAllocation(Configuration configuration) {
	}

	/**
	 * Gibt die Queue der Berechnungen zur端ck, inklusive der Konfiguration die aktuell berechnet wird.
	 * 
	 * @return Liste der Konfigurationen als FIFO-Queue angeordnet
	 */
	public List<Configuration> getQueue() {
		return configurationQueue;
	}
}
